function H(n){return new RegExp(n.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),"m")}function M(n){return n?typeof n=="string"?n:n.source:null}function a(n){return e("(?=",n,")")}function e(...n){return n.map(i=>M(i)).join("")}function K(n){const t=n[n.length-1];return typeof t=="object"&&t.constructor===Object?(n.splice(n.length-1,1),t):{}}function o(...n){return"("+(K(n).capture?"":"?:")+n.map(R=>M(R)).join("|")+")"}function q(n){const t=["abstract","and","as","assert","base","begin","class","default","delegate","do","done","downcast","downto","elif","else","end","exception","extern","finally","fixed","for","fun","function","global","if","in","inherit","inline","interface","internal","lazy","let","match","member","module","mutable","namespace","new","of","open","or","override","private","public","rec","return","static","struct","then","to","try","type","upcast","use","val","void","when","while","with","yield"],i={scope:"keyword",match:/\b(yield|return|let|do|match|use)!/},R=["if","else","endif","line","nowarn","light","r","i","I","load","time","help","quit"],D=["true","false","null","Some","None","Ok","Error","infinity","infinityf","nan","nanf"],h=["__LINE__","__SOURCE_DIRECTORY__","__SOURCE_FILE__"],v=["bool","byte","sbyte","int8","int16","int32","uint8","uint16","uint32","int","uint","int64","uint64","nativeint","unativeint","decimal","float","double","float32","single","char","string","unit","bigint","option","voption","list","array","seq","byref","exn","inref","nativeptr","obj","outref","voidptr","Result"],r={keyword:t,literal:D,built_in:["not","ref","raise","reraise","dict","readOnlyDict","set","get","enum","sizeof","typeof","typedefof","nameof","nullArg","invalidArg","invalidOp","id","fst","snd","ignore","lock","using","box","unbox","tryUnbox","printf","printfn","sprintf","eprintf","eprintfn","fprintf","fprintfn","failwith","failwithf"],"variable.constant":h},E={variants:[n.COMMENT(/\(\*(?!\))/,/\*\)/,{contains:["self"]}),n.C_LINE_COMMENT_MODE]},w=/[a-zA-Z_](\w|')*/,s={scope:"variable",begin:/``/,end:/``/},I=/\B('|\^)/,_={scope:"symbol",variants:[{match:e(I,/``.*?``/)},{match:e(I,n.UNDERSCORE_IDENT_RE)}],relevance:0},S=function({includeEqual:d}){let c;d?c="!%&*+-/<=>@^|~?":c="!%&*+-/<>@^|~?";const x=Array.from(c),P=e("[",...x.map(H),"]"),A=o(P,/\./),G=e(A,a(A)),F=o(e(G,A,"*"),e(P,"+"));return{scope:"operator",match:o(F,/:\?>/,/:\?/,/:>/,/:=/,/::?/,/\$/),relevance:0}},N=S({includeEqual:!0}),U=S({includeEqual:!1}),b=function(d,c){return{begin:e(d,a(e(/\s*/,o(/\w/,/'/,/\^/,/#/,/``/,/\(/,/{\|/)))),beginScope:c,end:a(o(/\n/,/=/)),relevance:0,keywords:n.inherit(r,{type:v}),contains:[E,_,n.inherit(s,{scope:null}),U]}},p=b(/:/,"operator"),B=b(/\bof\b/,"keyword"),Y={begin:[/(^|\s+)/,/type/,/\s+/,w],beginScope:{2:"keyword",4:"title.class"},end:a(/\(|=|$/),keywords:r,contains:[E,n.inherit(s,{scope:null}),_,{scope:"operator",match:/<|>/},p]},m={scope:"computation-expression",match:/\b[_a-z]\w*(?=\s*\{)/},g={begin:[/^\s*/,e(/#/,o(...R)),/\b/],beginScope:{2:"meta"},end:a(/\s|$/)},u={variants:[n.BINARY_NUMBER_MODE,n.C_NUMBER_MODE]},f={scope:"string",begin:/"/,end:/"/,contains:[n.BACKSLASH_ESCAPE]},O={scope:"string",begin:/@"/,end:/"/,contains:[{match:/""/},n.BACKSLASH_ESCAPE]},C={scope:"string",begin:/"""/,end:/"""/,relevance:2},l={scope:"subst",begin:/\{/,end:/\}/,keywords:r},y={scope:"string",begin:/\$"/,end:/"/,contains:[{match:/\{\{/},{match:/\}\}/},n.BACKSLASH_ESCAPE,l]},L={scope:"string",begin:/(\$@|@\$)"/,end:/"/,contains:[{match:/\{\{/},{match:/\}\}/},{match:/""/},n.BACKSLASH_ESCAPE,l]},k={scope:"string",begin:/\$"""/,end:/"""/,contains:[{match:/\{\{/},{match:/\}\}/},l],relevance:2},T={scope:"string",match:e(/'/,o(/[^\\']/,/\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8})/),/'/)};return l.contains=[L,y,O,f,T,i,E,s,p,m,g,u,_,N],{name:"F#",aliases:["fs","f#"],keywords:r,illegal:/\/\*/,classNameAliases:{"computation-expression":"keyword"},contains:[i,{variants:[k,L,y,C,O,f,T]},E,s,Y,{scope:"meta",begin:/\[</,end:/>\]/,relevance:2,contains:[s,C,O,f,T,u]},B,p,m,g,u,_,N]}}export{q as default};
